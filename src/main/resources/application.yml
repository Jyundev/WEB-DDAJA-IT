spring:
  profiles:
    active: local
    group:
      local: local
      blue: blue
      green: green

server:
  env: blue
  
---               
spring:
  config:
    activate:
      on-profile: local

  # 데이터 베이스 
  datasource:
      url: jdbc:mysql://localhost:3306/ddajait?userSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      username: root
      password: 1234
      driver-class-name: com.mysql.cj.jdbc.Driver

server:
  port: 8080
  serverAddress: localhost

serverName: local_server


---
spring:
  config:
    activate:
      on-profile: blue

        # 데이터 베이스 
  datasource:
      url: jdbc:mysql://ddajait-database.c7q262e6c0pc.ap-northeast-2.rds.amazonaws.com/ddajait
      username: ENC(pWqxwuz3pwEVGzbjp1Q8bw==) 
      password: ENC(EyxlESU6d7Y6JrYgkL6Ls5kH/B3w6RDj) 
      driver-class-name: com.mysql.cj.jdbc.Driver

server:
  port: 8080
  serverAddress: 43.200.79.117

serverName: blue_server

---
spring:
  config:
    activate:
      on-profile: green

    # 데이터 베이스 
  datasource:
      url: jdbc:mysql://ddajait-database.c7q262e6c0pc.ap-northeast-2.rds.amazonaws.com/ddajait
      username: ENC(pWqxwuz3pwEVGzbjp1Q8bw==) 
      password: ENC(EyxlESU6d7Y6JrYgkL6Ls5kH/B3w6RDj) 
      driver-class-name: com.mysql.cj.jdbc.Driver

server:
  port: 8081
  serverAddress: 43.200.79.117

serverName: green_server

---

# Spring Data Source 설정 
spring:
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
  application:
    name: ddajait
    
  output:
    ansi:
      enabled: always 


      


    #  데이터 베이스 커넥션 
  jpa:
    hibernate:
      ddl-auto: update 

        


# spring doc
springdoc:
# JSON 형식의 OpenAPI 문서의 사용자 경로 지정
  api-docs:
    path: /api-docs
    groups:
      enabled: true
  # HTML 형식의 swagger 문서의 사용자 경로 지정
  swagger-ui:
    path: /swagger-ui-custom.html
    enabled: true
    groups-order: ASC
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    doc-expansion: none
  cache:
    disabled: true
  model-and-view-allowed: true

jasypt:
  encryptor:
    bean: jasyptStringEncryptor # Jasypt Config 파일에서 등록하는 빈의 이름
    algorithm: PBEWithMD5AndDES # 암/복호화에 사용되는 알고리즘
    pool-size: 2 # 암호화 요청을 담고 있는 pool의 크기
    string-output-type: base64 # 암호화 이후에 어떤 형태로 값을 받을지 설정. base64 / hexadecimal을 선택
    key-obtention-iterations: 1000 # 암호화 키를 얻기 위해 반복해야 하는 해시 횟수
    password: ${JASYPT_KEY} # 환경변수 설정 

# logingㅖ
# race → warn → info → debug → error(적은 로깅) 순
# 개발 서버는 debug, 운영 서버는 info
logging:
  level:
    com.web: debug


#JWT
jwt:
  header: Authorization
  #HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secret key를 사용해야 한다.
  secret: ENC(aB3xZRweVB7oSRARk61KcFasISFtqdsD18G1/r5Sl5zIuxj58YT2s1/SwMZD/g//tvqNpSJfOozJMveW8ltda5kdXjTc+f9Q8q22T2frYKNfEsNDs3+ZD7NyTcpxS/iDdbblZ0F64gtsgGbsf1I7u5wOeBBmKwnjqGIRbNqjD/hwqLbZEdxsQsOs5ipkdaIx) 
  token-validity-in-seconds: 86400      